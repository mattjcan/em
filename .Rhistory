addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addTiles() %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles("CartoDB.Positron")
leaflet() %>%
addProviderTiles(leaflet::providers$CartoDB.Positron)
# PREAMBLE ---------------------------------------------------------------
library(tidyverse)
library(knitr)
library(xaringan)
library(rmarkdown)
library(ggthemes)
library(zoo)
library(readxl)
library(lubridate)
library(scales)
library(easynls)
library(gridExtra)
library(readxl)
library(survey)
library(vcd)
library(XML)
library(xml2)
library(sp)
library(rgdal)
library(leaflet)
# PLOT FORMATS ----
background <- c("#e5e5df")
theme_mc <- theme_economist() +
theme(legend.position="none") +
theme(plot.title = element_text(size = 10, face = "bold")) +
theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.line = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(plot.caption = element_text(hjust = 0, size = 9)) +
theme(plot.background = element_rect(fill = background)) +
theme(panel.background = element_rect(fill = background)) +
theme(panel.grid.major.y =  element_line(color = "#b3b3b3", size = 0.2))
stroke_size <- 0.75
line_color <- "#2166ac"
# IMPORT ------------------------------------------------------------------
d <- "C:/Users/matt/Dropbox/2a. Election/data/eden-monaro/" # parent directory for the data
em_pp <- read_csv(paste0(d, "data/HouseStateFirstPrefsByPollingPlaceDownload-25820-NSW.csv"), skip = 1)
# import polling booth locations
pb19 <- read_csv(paste0(d,"data/GeneralPollingPlacesDownload-24310.csv"), skip = 1)
fed_elec <- readOGR(paste0(d,"data/COM_ELB_region.shx"))
# TIDY ----
em_pp <- em_pp %>%
rename(pp_id = PollingPlaceID,
pp = PollingPlace,
party = PartyAb,
party_nm = PartyNm,
v = OrdinaryVotes,
s = Swing) %>%
select(pp_id, pp, party, party_nm, v, s)
pb19 <- pb19 %>%
select(PollingPlaceID, Latitude, Longitude) %>%
rename(pp_id = PollingPlaceID,
lat = Latitude,
lon = Longitude)
em_pp <- left_join(em_pp, pb19, by = "pp_id")
# TRANSFORM ----
em_pp <- em_pp %>%
group_by(pp) %>%
mutate(p = v / sum(v) * 100)
nat_pp <- em_pp %>%
filter(party == "NP")
nat_pp$popup_label <- paste0("<b>", nat_pp$pp, "</b>", "<br/>", "NAT Primary: ", round(nat_pp$p, 1), "%", "<br/>", "Primary Swing: ", round(nat_pp$s, 1), "%")
pp_nat <- em_pp %>%
filter(party == "NP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
pp_asp <- em_pp %>%
filter(party == "ASP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
temp <- pp_asp %>%
select(pp, p)
pp_nat_asp <- left_join(pp_nat, temp, by = "pp")
tab <- pp_nat_asp %>%
rename(nat = p.x,
asp = p.y)
# write_csv(pp_nat, "data/pp_nat.csv")
# write_csv(pp_asp, "data/pp_asp.csv")
# MAPS
em_map <- fed_elec[fed_elec$Elect_div %in% "Eden-monaro", ]
pal_em <- colorBin(c("#ff1414", "#ff4e4e", "#ff8989", "#ffc4c4" ,"#c4c4ff" , "#8989ff" , "#4e4eff", "#1414ff"), domain = nat_pp$s, bins = c(-20, -15, -10, -5, 0, 5, 10, 15, 25))
leaflet() %>%
addProviderTiles("CartoDB") %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addTiles() %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
# PREAMBLE ---------------------------------------------------------------
library(tidyverse)
library(knitr)
library(xaringan)
library(rmarkdown)
library(ggthemes)
library(zoo)
library(readxl)
library(lubridate)
library(scales)
library(easynls)
library(gridExtra)
library(readxl)
library(survey)
library(vcd)
library(XML)
library(xml2)
library(sp)
library(rgdal)
library(leaflet)
# PLOT FORMATS ----
background <- c("#e5e5df")
theme_mc <- theme_economist() +
theme(legend.position="none") +
theme(plot.title = element_text(size = 10, face = "bold")) +
theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.line = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(plot.caption = element_text(hjust = 0, size = 9)) +
theme(plot.background = element_rect(fill = background)) +
theme(panel.background = element_rect(fill = background)) +
theme(panel.grid.major.y =  element_line(color = "#b3b3b3", size = 0.2))
stroke_size <- 0.75
line_color <- "#2166ac"
# IMPORT ------------------------------------------------------------------
d <- "C:/Users/matt/Dropbox/2a. Election/data/eden-monaro/" # parent directory for the data
em_pp <- read_csv(paste0(d, "data/HouseStateFirstPrefsByPollingPlaceDownload-25820-NSW.csv"), skip = 1)
# import polling booth locations
pb19 <- read_csv(paste0(d,"data/GeneralPollingPlacesDownload-24310.csv"), skip = 1)
fed_elec <- readOGR(paste0(d,"data/COM_ELB_region.shx"))
# TIDY ----
em_pp <- em_pp %>%
rename(pp_id = PollingPlaceID,
pp = PollingPlace,
party = PartyAb,
party_nm = PartyNm,
v = OrdinaryVotes,
s = Swing) %>%
select(pp_id, pp, party, party_nm, v, s)
pb19 <- pb19 %>%
select(PollingPlaceID, Latitude, Longitude) %>%
rename(pp_id = PollingPlaceID,
lat = Latitude,
lon = Longitude)
em_pp <- left_join(em_pp, pb19, by = "pp_id")
# TRANSFORM ----
em_pp <- em_pp %>%
group_by(pp) %>%
mutate(p = v / sum(v) * 100)
nat_pp <- em_pp %>%
filter(party == "NP")
nat_pp$popup_label <- paste0("<b>", nat_pp$pp, "</b>", "<br/>", "NAT Primary: ", round(nat_pp$p, 1), "%", "<br/>", "Primary Swing: ", round(nat_pp$s, 1), "%")
pp_nat <- em_pp %>%
filter(party == "NP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
pp_asp <- em_pp %>%
filter(party == "ASP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
temp <- pp_asp %>%
select(pp, p)
pp_nat_asp <- left_join(pp_nat, temp, by = "pp")
tab <- pp_nat_asp %>%
rename(nat = p.x,
asp = p.y)
# write_csv(pp_nat, "data/pp_nat.csv")
# write_csv(pp_asp, "data/pp_asp.csv")
# MAPS
em_map <- fed_elec[fed_elec$Elect_div %in% "Eden-monaro", ]
pal_em <- colorBin(c("#ff1414", "#ff4e4e", "#ff8989", "#ffc4c4" ,"#c4c4ff" , "#8989ff" , "#4e4eff", "#1414ff"), domain = nat_pp$s, bins = c(-20, -15, -10, -5, 0, 5, 10, 15, 25))
leaflet() %>%
addProviderTiles("Jawg.Light") %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles("Stamen.Watercolor")
leaflet() %>%
addProviderTiles("CartoDB")
leaflet() %>%
addProviderTiles("Esri.WorldGrayCanvas")
leaflet() %>%
addProviderTiles("Jawg.Light")
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
library(mapview)
insinstall.packages("mapview")
install.packages("mapview")
install.packages("mapview")
install.packages("mapview")
install.packages("mapview")
install.packages("mapview")
library(mapview)
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
library(tidyverse)
library(knitr)
library(xaringan)
library(rmarkdown)
library(ggthemes)
library(zoo)
library(readxl)
library(lubridate)
library(scales)
library(easynls)
library(gridExtra)
library(readxl)
library(survey)
library(vcd)
library(XML)
library(xml2)
library(sp)
library(rgdal)
library(leaflet)
library(mapview)
background <- c("#e5e5df")
theme_mc <- theme_economist() +
theme(legend.position="none") +
theme(plot.title = element_text(size = 10, face = "bold")) +
theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.line = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(plot.caption = element_text(hjust = 0, size = 9)) +
theme(plot.background = element_rect(fill = background)) +
theme(panel.background = element_rect(fill = background)) +
theme(panel.grid.major.y =  element_line(color = "#b3b3b3", size = 0.2))
stroke_size <- 0.75
line_color <- "#2166ac"
d <- "C:/Users/matt/Dropbox/2a. Election/data/eden-monaro/" # parent directory for the data
em_pp <- read_csv(paste0(d, "data/HouseStateFirstPrefsByPollingPlaceDownload-25820-NSW.csv"), skip = 1)
pb19 <- read_csv(paste0(d,"data/GeneralPollingPlacesDownload-24310.csv"), skip = 1)
fed_elec <- readOGR(paste0(d,"data/COM_ELB_region.shx"))
em_pp <- em_pp %>%
rename(pp_id = PollingPlaceID,
pp = PollingPlace,
party = PartyAb,
party_nm = PartyNm,
v = OrdinaryVotes,
s = Swing) %>%
select(pp_id, pp, party, party_nm, v, s)
pb19 <- pb19 %>%
select(PollingPlaceID, Latitude, Longitude) %>%
rename(pp_id = PollingPlaceID,
lat = Latitude,
lon = Longitude)
em_pp <- left_join(em_pp, pb19, by = "pp_id")
em_pp <- em_pp %>%
group_by(pp) %>%
mutate(p = v / sum(v) * 100)
nat_pp <- em_pp %>%
filter(party == "NP")
nat_pp$popup_label <- paste0("<b>", nat_pp$pp, "</b>", "<br/>", "NAT Primary: ", round(nat_pp$p, 1), "%", "<br/>", "Primary Swing: ", round(nat_pp$s, 1), "%")
pp_nat <- em_pp %>%
filter(party == "NP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
pp_asp <- em_pp %>%
filter(party == "ASP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
temp <- pp_asp %>%
select(pp, p)
pp_nat_asp <- left_join(pp_nat, temp, by = "pp")
tab <- pp_nat_asp %>%
rename(nat = p.x,
asp = p.y)
em_map <- fed_elec[fed_elec$Elect_div %in% "Eden-monaro", ]
pal_em <- colorBin(c("#ff1414", "#ff4e4e", "#ff8989", "#ffc4c4" ,"#c4c4ff" , "#8989ff" , "#4e4eff", "#1414ff"), domain = nat_pp$s, bins = c(-20, -15, -10, -5, 0, 5, 10, 15, 25))
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles(providers$Jawg.Light) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
m_nat_s <- leaflet(data = nat_pp) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = nat_pp %>% filter(s >= 0 & !is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive") %>%
addCircleMarkers(data = nat_pp %>% filter(s < 0 & !is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Negative") %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addLegend(title = "Primary swing to NAT (%)", pal = pal_em, values = c(-30, 30), position = "bottomright") %>%
addLayersControl(overlayGroups = c("Positive", "Negative"))
m_nat_s
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
library(tidyverse)
library(knitr)
library(xaringan)
library(rmarkdown)
library(ggthemes)
library(zoo)
library(readxl)
library(lubridate)
library(scales)
library(easynls)
library(gridExtra)
library(readxl)
library(survey)
library(vcd)
library(XML)
library(xml2)
library(sp)
library(rgdal)
library(leaflet)
library(mapview)
background <- c("#e5e5df")
theme_mc <- theme_economist() +
theme(legend.position="none") +
theme(plot.title = element_text(size = 10, face = "bold")) +
theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.line = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(plot.caption = element_text(hjust = 0, size = 9)) +
theme(plot.background = element_rect(fill = background)) +
theme(panel.background = element_rect(fill = background)) +
theme(panel.grid.major.y =  element_line(color = "#b3b3b3", size = 0.2))
stroke_size <- 0.75
line_color <- "#2166ac"
d <- "C:/Users/matt/Dropbox/2a. Election/data/eden-monaro/" # parent directory for the data
em_pp <- read_csv(paste0(d, "data/HouseStateFirstPrefsByPollingPlaceDownload-25820-NSW.csv"), skip = 1)
pb19 <- read_csv(paste0(d,"data/GeneralPollingPlacesDownload-24310.csv"), skip = 1)
fed_elec <- readOGR(paste0(d,"data/COM_ELB_region.shx"))
em_pp <- em_pp %>%
rename(pp_id = PollingPlaceID,
pp = PollingPlace,
party = PartyAb,
party_nm = PartyNm,
v = OrdinaryVotes,
s = Swing) %>%
select(pp_id, pp, party, party_nm, v, s)
pb19 <- pb19 %>%
select(PollingPlaceID, Latitude, Longitude) %>%
rename(pp_id = PollingPlaceID,
lat = Latitude,
lon = Longitude)
em_pp <- left_join(em_pp, pb19, by = "pp_id")
em_pp <- em_pp %>%
group_by(pp) %>%
mutate(p = v / sum(v) * 100)
nat_pp <- em_pp %>%
filter(party == "NP")
nat_pp$popup_label <- paste0("<b>", nat_pp$pp, "</b>", "<br/>", "NAT Primary: ", round(nat_pp$p, 1), "%", "<br/>", "Primary Swing: ", round(nat_pp$s, 1), "%")
pp_nat <- em_pp %>%
filter(party == "NP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
pp_asp <- em_pp %>%
filter(party == "ASP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
temp <- pp_asp %>%
select(pp, p)
pp_nat_asp <- left_join(pp_nat, temp, by = "pp")
tab <- pp_nat_asp %>%
rename(nat = p.x,
asp = p.y)
em_map <- fed_elec[fed_elec$Elect_div %in% "Eden-monaro", ]
pal_em <- colorBin(c("#ff1414", "#ff4e4e", "#ff8989", "#ffc4c4" ,"#c4c4ff" , "#8989ff" , "#4e4eff", "#1414ff"), domain = nat_pp$s, bins = c(-20, -15, -10, -5, 0, 5, 10, 15, 25))
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
m_nat_s <- leaflet(data = nat_pp) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = nat_pp %>% filter(s >= 0 & !is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive") %>%
addCircleMarkers(data = nat_pp %>% filter(s < 0 & !is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Negative") %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addLegend(title = "Primary swing to NAT (%)", pal = pal_em, values = c(-30, 30), position = "bottomright") %>%
addLayersControl(overlayGroups = c("Positive", "Negative"))
m_nat_s
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
leaflet() %>%
addTiles()
leaflet() %>%
addTiles()
leaflet() %>%
addTiles()
library(tidyverse)
library(knitr)
library(xaringan)
library(rmarkdown)
library(ggthemes)
library(zoo)
library(readxl)
library(lubridate)
library(scales)
library(easynls)
library(gridExtra)
library(readxl)
library(survey)
library(vcd)
library(XML)
library(xml2)
library(sp)
library(rgdal)
library(leaflet)
library(mapview)
# PLOT FORMATS ----
background <- c("#e5e5df")
theme_mc <- theme_economist() +
theme(legend.position="none") +
theme(plot.title = element_text(size = 10, face = "bold")) +
theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.line = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(plot.caption = element_text(hjust = 0, size = 9)) +
theme(plot.background = element_rect(fill = background)) +
theme(panel.background = element_rect(fill = background)) +
theme(panel.grid.major.y =  element_line(color = "#b3b3b3", size = 0.2))
stroke_size <- 0.75
line_color <- "#2166ac"
# IMPORT ------------------------------------------------------------------
d <- "C:/Users/matt/Dropbox/2a. Election/data/eden-monaro/" # parent directory for the data
em_pp <- read_csv(paste0(d, "data/HouseStateFirstPrefsByPollingPlaceDownload-25820-NSW.csv"), skip = 1)
# import polling booth locations
pb19 <- read_csv(paste0(d,"data/GeneralPollingPlacesDownload-24310.csv"), skip = 1)
fed_elec <- readOGR(paste0(d,"data/COM_ELB_region.shx"))
# TIDY ----
em_pp <- em_pp %>%
rename(pp_id = PollingPlaceID,
pp = PollingPlace,
party = PartyAb,
party_nm = PartyNm,
v = OrdinaryVotes,
s = Swing) %>%
select(pp_id, pp, party, party_nm, v, s)
pb19 <- pb19 %>%
select(PollingPlaceID, Latitude, Longitude) %>%
rename(pp_id = PollingPlaceID,
lat = Latitude,
lon = Longitude)
em_pp <- left_join(em_pp, pb19, by = "pp_id")
# TRANSFORM ----
em_pp <- em_pp %>%
group_by(pp) %>%
mutate(p = v / sum(v) * 100)
nat_pp <- em_pp %>%
filter(party == "NP")
nat_pp$popup_label <- paste0("<b>", nat_pp$pp, "</b>", "<br/>", "NAT Primary: ", round(nat_pp$p, 1), "%", "<br/>", "Primary Swing: ", round(nat_pp$s, 1), "%")
pp_nat <- em_pp %>%
filter(party == "NP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
pp_asp <- em_pp %>%
filter(party == "ASP") %>%
select(pp, party, party_nm, p, s) %>%
arrange(-p)
temp <- pp_asp %>%
select(pp, p)
pp_nat_asp <- left_join(pp_nat, temp, by = "pp")
tab <- pp_nat_asp %>%
rename(nat = p.x,
asp = p.y)
# write_csv(pp_nat, "data/pp_nat.csv")
# write_csv(pp_asp, "data/pp_asp.csv")
# MAPS
em_map <- fed_elec[fed_elec$Elect_div %in% "Eden-monaro", ]
pal_em <- colorBin(c("#ff1414", "#ff4e4e", "#ff8989", "#ffc4c4" ,"#c4c4ff" , "#8989ff" , "#4e4eff", "#1414ff"), domain = nat_pp$s, bins = c(-20, -15, -10, -5, 0, 5, 10, 15, 25))
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = em_map, color = "#696969", weight = 0.5, opacity = 1, fill = FALSE, label = em_map$Elect_div, highlight = highlightOptions(weight = 2, color = "black", bringToFront = TRUE)) %>%
addCircleMarkers(data = nat_pp %>% filter(!is.na(lat)), fillOpacity = 1, color = ~pal_em(s), radius = 3, stroke = FALSE, popup = ~popup_label, group = "Positive")
